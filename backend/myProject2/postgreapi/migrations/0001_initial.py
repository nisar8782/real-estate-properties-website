# Generated by Django 5.0.4 on 2024-05-05 10:55

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='addressesModel',
            fields=[
                ('pkaddress', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LON', models.FloatField(blank=True, null=True)),
                ('LAT', models.FloatField(blank=True, null=True)),
                ('NUMBER', models.CharField(blank=True, max_length=20, null=True)),
                ('STREET', models.CharField(blank=True, max_length=255, null=True)),
                ('CITY', models.CharField(max_length=100)),
                ('REGION', models.CharField(max_length=5)),
                ('POSTCODE', models.CharField(max_length=10)),
                ('ID', models.IntegerField(blank=True, null=True)),
                ('HASH', models.CharField(blank=True, max_length=255, null=True)),
                ('COUNTRY', models.CharField(blank=True, max_length=10, null=True)),
                ('rawAddressLine', models.CharField(blank=True, max_length=255, null=True)),
                ('stateAbbreviation', models.CharField(blank=True, max_length=10, null=True)),
                ('displayType', models.CharField(blank=True, max_length=20, null=True)),
                ('streetNumber', models.CharField(blank=True, max_length=20, null=True)),
                ('suburb', models.CharField(blank=True, max_length=100, null=True)),
                ('displayAddress', models.CharField(blank=True, max_length=255, null=True)),
                ('isMatched', models.BooleanField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='userCompanyModel',
            fields=[
                ('pkuserCompany', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.CharField(blank=True, max_length=255, null=True)),
                ('banner', models.CharField(blank=True, max_length=255, null=True)),
                ('primaryAgencyColor', models.CharField(blank=True, max_length=10, null=True)),
                ('colorsApplyTo', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.CharField(blank=True, max_length=255, null=True)),
                ('aboutUs', models.TextField(blank=True, null=True)),
                ('webSite', models.CharField(blank=True, max_length=255, null=True)),
                ('facebookUrl', models.CharField(blank=True, max_length=255, null=True)),
                ('twitterUrl', models.CharField(blank=True, max_length=255, null=True)),
                ('instagramUrl', models.CharField(blank=True, max_length=255, null=True)),
                ('linkedInUrl', models.CharField(blank=True, max_length=255, null=True)),
                ('youtubeChannelUrl', models.CharField(blank=True, max_length=255, null=True)),
                ('cellPhone', models.CharField(blank=True, max_length=20, null=True)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('realEstateLicense', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('suburb', models.CharField(blank=True, max_length=100, null=True)),
                ('postcode', models.CharField(blank=True, max_length=10, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('last30daysSale', models.IntegerField(blank=True, null=True)),
                ('languages', models.CharField(blank=True, max_length=255, null=True)),
                ('teamSize', models.IntegerField(blank=True, null=True)),
                ('companyName', models.CharField(blank=True, max_length=255, null=True)),
                ('websiteAddress', models.CharField(blank=True, max_length=255, null=True)),
                ('companyPhoneNumber', models.CharField(blank=True, max_length=20, null=True)),
                ('ABN_ACN', models.CharField(blank=True, max_length=50, null=True)),
                ('mainBusinessLocation', models.CharField(blank=True, max_length=255, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('dataSourceSite', models.CharField(blank=True, max_length=50, null=True)),
                ('dataSourceId', models.CharField(blank=True, max_length=50, null=True)),
                ('syncApp', models.CharField(blank=True, max_length=50, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'usercompanies',
            },
        ),
        migrations.CreateModel(
            name='userModel',
            fields=[
                ('pkuser', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('firstName', models.CharField(blank=True, max_length=50, null=True)),
                ('lastName', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('zipCode', models.CharField(blank=True, max_length=10, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('phoneno', models.CharField(blank=True, max_length=20, null=True)),
                ('accountType', models.CharField(blank=True, max_length=20, null=True)),
                ('userType', models.CharField(blank=True, max_length=20, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('jobCategory', models.CharField(blank=True, max_length=100, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('about', models.TextField(blank=True, null=True)),
                ('skills', models.TextField(blank=True, null=True)),
                ('languages', models.TextField(blank=True, null=True)),
                ('facebookUrl', models.CharField(blank=True, max_length=255, null=True)),
                ('twitterUrl', models.CharField(blank=True, max_length=255, null=True)),
                ('linkedInUrl', models.CharField(blank=True, max_length=255, null=True)),
                ('instagramUrl', models.CharField(blank=True, max_length=255, null=True)),
                ('youTubeChannelUrl', models.CharField(blank=True, max_length=255, null=True)),
                ('personalWebsiteUrl', models.CharField(blank=True, max_length=255, null=True)),
                ('notification', models.TextField(blank=True, null=True)),
                ('displayAddress', models.CharField(blank=True, max_length=255, null=True)),
                ('line1', models.CharField(blank=True, max_length=255, null=True)),
                ('line2', models.CharField(blank=True, max_length=255, null=True)),
                ('suburb', models.CharField(blank=True, max_length=100, null=True)),
                ('postcode', models.CharField(blank=True, max_length=10, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=10, null=True)),
                ('resetToken', models.CharField(blank=True, max_length=5, null=True)),
                ('uid', models.IntegerField(blank=True, null=True)),
                ('provider', models.CharField(blank=True, max_length=50, null=True)),
                ('photoURL', models.URLField(blank=True, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('yearOfBirth', models.IntegerField(blank=True, null=True)),
                ('dataSourceSite', models.CharField(blank=True, max_length=50, null=True)),
                ('dataSourceId', models.CharField(blank=True, max_length=50, null=True)),
                ('lastUpdatedByAdminId', models.IntegerField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('fkcompanyid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='postgreapi.usercompanymodel')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='propertyModel',
            fields=[
                ('pkproperty', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewCount', models.IntegerField(blank=True, null=True)),
                ('isAuctionProperty', models.BooleanField(default=True)),
                ('propertyType', models.CharField(blank=True, max_length=100, null=True)),
                ('lastSaleRecord', models.TextField(blank=True, null=True)),
                ('price', models.CharField(blank=True, max_length=100, null=True)),
                ('display', models.BooleanField(default=True)),
                ('saleStatus', models.CharField(blank=True, max_length=20, null=True)),
                ('isActive', models.BooleanField(default=True)),
                ('slug', models.CharField(blank=True, max_length=255, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('buildingDistance', models.FloatField(blank=True, null=True)),
                ('carSpaces', models.IntegerField(blank=True, null=True)),
                ('bathRooms', models.IntegerField(blank=True, null=True)),
                ('bedRooms', models.IntegerField(blank=True, null=True)),
                ('floorSize', models.IntegerField(blank=True, null=True)),
                ('landArea', models.IntegerField(blank=True, null=True)),
                ('insideFeatures', models.TextField(blank=True, null=True)),
                ('outsideFeatures', models.TextField(blank=True, null=True)),
                ('headline', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('propertyCategory', models.CharField(blank=True, max_length=50, null=True)),
                ('site', models.CharField(blank=True, max_length=255, null=True)),
                ('siteid', models.CharField(blank=True, max_length=255, null=True)),
                ('videoTourUrl', models.CharField(blank=True, max_length=255, null=True)),
                ('virtualTourUrl', models.CharField(blank=True, max_length=255, null=True)),
                ('yearBuilt', models.IntegerField(blank=True, null=True)),
                ('staticMapUrl', models.URLField(blank=True, max_length=5000, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('deletedAt', models.DateTimeField(null=True)),
                ('fkaddress', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='property', to='postgreapi.addressesmodel')),
                ('fkuser', models.ManyToManyField(blank=True, null=True, related_name='userproperty', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'properties',
            },
        ),
        migrations.CreateModel(
            name='imagesModel',
            fields=[
                ('pkimages', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mediaType', models.CharField(blank=True, max_length=20, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=20, null=True)),
                ('fkproperty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='postgreapi.propertymodel')),
            ],
            options={
                'db_table': 'images',
            },
        ),
    ]
